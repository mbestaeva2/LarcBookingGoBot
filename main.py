from telebot import TeleBot, types
import os

TOKEN = os.getenv("BOT_TOKEN")
bot = TeleBot(TOKEN)
user_data = {}

usd_rate = 90
eur_rate = 100
gel_rate = 32

def calculate_price(adults, children, animals, route):
    if "–ë–∞—Ç—É–º–∏" in route:
        price_adult, price_child, price_pet = 6000, 4000, 1000
    elif "–ö—É—Ç–∞–∏—Å–∏" in route:
        price_adult, price_child, price_pet = 5000, 3500, 800
    elif "–°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞" in route:
        price_adult, price_child, price_pet = 2000, 1500, 500
    else:
        price_adult, price_child, price_pet = 3000, 2000, 500

    total = adults * price_adult + children * price_child + animals * price_pet
    total_passengers = adults + children + animals

    if total_passengers >= 7:
        discount = 15
    elif total_passengers >= 5:
        discount = 10
    elif total_passengers >= 3:
        discount = 5
    else:
        discount = 0

    final_rub = int(total * (1 - discount / 100))

    return {
        "final_rub": final_rub,
        "final_usd": round(final_rub / usd_rate, 2),
        "final_eur": round(final_rub / eur_rate, 2),
        "final_gel": round(final_rub / gel_rate, 2),
        "discount_percent": discount,
        "passengers": total_passengers
    }

@bot.message_handler(commands=['start'])
def show_main_menu(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", callback_data="start_booking"),
        types.InlineKeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calc_price"),
        types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", callback_data="info"),
        types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/TransverTbilisi")
    )
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    data = user_data.setdefault(chat_id, {})

    if call.data == "start_booking":
        if "adults" in data and "children" in data and "animals" in data and "route" in data:
            bot.send_message(chat_id, "–í—ã —É–∂–µ —Ä–∞—Å—Å—á–∏—Ç–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å. –û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞—è–≤–∫—É.")
            ask_name(chat_id)
        else:
            bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:")
            bot.register_next_step_handler(call.message, get_adults)

    elif call.data == "calc_price":
        data.clear()
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –≤–∑—Ä–æ—Å–ª—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤?")
        bot.register_next_step_handler(call.message, get_adults)

    elif call.data == "info":
bot.send_message(chat_id, """–î–ª—è –ø–æ–µ–∑–¥–∫–∏ –≤ –ì—Ä—É–∑–∏—é –≤–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è:

üõÇ –ü–∞—Å–ø–æ—Ä—Ç –†–§ –∏–ª–∏ –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç
üßæ COVID-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ‚Äî –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏
üö´ –í–∏–∑–∞ –Ω–µ –Ω—É–∂–Ω–∞ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§

üìå –£—Ç–æ—á–Ω—è–π—Ç–µ –¥–µ—Ç–∞–ª–∏ —É –≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.""")
    elif call.data.startswith("route_"):
        route = call.data.split("_", 1)[1]
        data["route"] = route
        if all(k in data for k in ["adults", "children", "animals"]):
            result = calculate_price(data["adults"], data["children"], data["animals"], route)
            data["price"] = result
            message_text = (
                "–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:
"
                + route + "
"
                + "–í–∑—Ä: " + str(data["adults"]) + " | –î–µ—Ç: " + str(data["children"]) + " | –ñ–∏–≤: " + str(data["animals"]) + "
"
                + "–í—Å–µ–≥–æ: " + str(result["passengers"]) + "
"
                + "–°–∫–∏–¥–∫–∞: " + str(result["discount_percent"]) + "%
"
                + str(result["final_rub"]) + " RUB | " + str(result["final_usd"]) + " USD | " + str(result["final_eur"]) + " EUR | " + str(result["final_gel"]) + " GEL"
            )
            bot.send_message(chat_id, message_text)
            ask_name(chat_id)

def get_adults(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["adults"] = int(message.text)
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π?")
        bot.register_next_step_handler(message, get_children)
    except:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤–∑—Ä–æ—Å–ª—ã—Ö:")
        bot.register_next_step_handler(message, get_adults)

def get_children(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["children"] = int(message.text)
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö?")
        bot.register_next_step_handler(message, get_animals)
    except:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–µ—Ç–µ–π:")
        bot.register_next_step_handler(message, get_children)

def get_animals(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["animals"] = int(message.text)
        markup = types.InlineKeyboardMarkup()
        for route in ["–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –¢–±–∏–ª–∏—Å–∏", "–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞", "–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ö—É—Ç–∞–∏—Å–∏", "–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ë–∞—Ç—É–º–∏", "–¢–±–∏–ª–∏—Å–∏ ‚Äî –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑"]:
            markup.add(types.InlineKeyboardButton(route, callback_data="route_" + route))
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:", reply_markup=markup)
    except:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö:")
        bot.register_next_step_handler(message, get_animals)

def ask_name(chat_id):
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(msg, get_name)

def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]["name"] = message.text
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 28.07):")
    bot.register_next_step_handler(msg, get_date)

def get_date(message):
    chat_id = message.chat.id
    user_data[chat_id]["date"] = message.text
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(msg, get_phone)

def get_phone(message):
    chat_id = message.chat.id
    user_data[chat_id]["phone"] = message.text
    summary = user_data[chat_id]
    message_text = (
        "–ó–∞—è–≤–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!

"
        + "–ò–º—è: " + summary["name"] + "
"
        + "–î–∞—Ç–∞: " + summary["date"] + "
"
        + "–ú–∞—Ä—à—Ä—É—Ç: " + summary["route"] + "
"
        + "–¢–µ–ª–µ—Ñ–æ–Ω: " + summary["phone"] + "
"
        + "–í–∑—Ä: " + str(summary["adults"]) + " | –î–µ—Ç: " + str(summary["children"]) + " | –ñ–∏–≤: " + str(summary["animals"]) + "
"
        + "–°—É–º–º–∞: " + str(summary["price"]["final_rub"]) + " RUB (" + str(summary["price"]["final_usd"]) + " USD)"
    )
    bot.send_message(561665893, message_text)
    bot.send_message(chat_id, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

if __name__ == "__main__":
    bot.polling(none_stop=True)
