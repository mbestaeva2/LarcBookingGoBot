from telebot import TeleBot, types
import os

TOKEN = os.getenv("BOT_TOKEN")
bot = TeleBot(TOKEN)

user_data = {}

# –í–∞–ª—é—Ç–Ω—ã–µ –∫—É—Ä—Å—ã
usd_rate = 90
eur_rate = 100
gel_rate = 30

# ---------- –§–£–ù–ö–¶–ò–Ø –†–ê–°–ß–Å–¢–ê ---------- #
def calculate_price(adults, children, animals, route):
    # –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã –ø–æ –º–∞—Ä—à—Ä—É—Ç—É
    if "–ë–∞—Ç—É–º–∏" in route:
        price_adult = 6000
        price_child = 4000
        price_pet = 1000
    elif "–ö—É—Ç–∞–∏—Å–∏" in route:
        price_adult = 5000
        price_child = 3500
        price_pet = 800
    elif "–°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞" in route:
        price_adult = 2000
        price_child = 1500
        price_pet = 500
    else:
        # –î–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑‚Äî–¢–±–∏–ª–∏—Å–∏ –∏ –¢–±–∏–ª–∏—Å–∏‚Äî–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑
        price_adult = 3000
        price_child = 2000
        price_pet = 500

    # –ü–æ–¥—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    total = adults * price_adult + children * price_child + animals * price_pet
    total_passengers = adults + children + animals

    # –°–∫–∏–¥–∫–∏
    if total_passengers >= 7:
        discount = 15
    elif total_passengers >= 5:
        discount = 10
    elif total_passengers >= 3:
        discount = 5
    else:
        discount = 0

    final_rub = int(total * (1 - discount / 100))

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç (–º–æ–∂–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ API)
    usd_rate = 90
    eur_rate = 100
    gel_rate = 32

    return {
        "final_rub": final_rub,
        "final_usd": round(final_rub / usd_rate, 2),
        "final_eur": round(final_rub / eur_rate, 2),
        "final_gel": round(final_rub / gel_rate, 2),
        "discount_percent": discount,
        "passengers": total_passengers
    }

@bot.message_handler(commands=['start'])
def show_main_menu(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("üöê –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", callback_data="start_booking"),
        types.InlineKeyboardButton("üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calc_price"),
        types.InlineKeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", callback_data="info"),
        types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/TransverTbilisi")
    )
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëã –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# ---------- –°–¢–ê–†–¢ ---------- #
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id

    if call.data == "start_booking":
        user_data[chat_id] = {}
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")
        bot.register_next_step_handler(msg, get_name)

    elif call.data == "info":
        bot.answer_callback_query(call.id)
        bot.send_message(chat_id, "üìÑ –î–ª—è –ø–æ–µ–∑–¥–∫–∏ –≤ –ì—Ä—É–∑–∏—é –≤–∞–º –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è:\n\n"
                                  "üõÇ –ü–∞—Å–ø–æ—Ä—Ç –†–§ –∏–ª–∏ –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç\n"
                                  "üßæ COVID-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ‚Äî –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏\n"
                                  "üö´ –í–∏–∑–∞ –Ω–µ –Ω—É–∂–Ω–∞ –¥–ª—è –≥—Ä–∞–∂–¥–∞–Ω –†–§\n\n"
                                  "üìå –£—Ç–æ—á–Ω—è–π—Ç–µ –¥–µ—Ç–∞–ª–∏ —É –≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

    elif call.data == "calc_price":
        user_data[chat_id] = {}
        msg = bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –≤–∑—Ä–æ—Å–ª—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤?")
        bot.register_next_step_handler(msg, get_adults_for_price)

    elif call.data.startswith("calc_route_"):
        bot.answer_callback_query(call.id)
        route = call.data.split("_", 1)[1]
        user_data[chat_id]["route"] = route

        adults = int(user_data[chat_id].get("adults", 0))
        children = int(user_data[chat_id].get("children", 0))
        animals = int(user_data[chat_id].get("animals", 0))

        result = calculate_price(adults, children, animals, route)
        user_data[chat_id]["price"] = result

        text = f"""üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:

üìç {route}
üë§ –í–∑—Ä: {adults} | üßí –î–µ—Ç: {children} | üê∂ –ñ–∏–≤: {animals}
üéü –í—Å–µ–≥–æ: {result['passengers']}
üîª –°–∫–∏–¥–∫–∞: {result['discount_percent']}%
üíµ {result['final_rub']} ‚ÇΩ | {result['final_usd']} $ | {result['final_eur']} ‚Ç¨ | {result['final_gel']} ‚Çæ
"""
        bot.send_message(chat_id, text)

        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("‚úÖ –î–∞, —Ö–æ—á—É –æ—Ñ–æ—Ä–º–∏—Ç—å", callback_data="confirm_booking"),
            types.InlineKeyboardButton("‚ùå –ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ", callback_data="cancel_booking")
        )
        bot.send_message(chat_id, "–•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–µ–∑–¥–∫—É?", reply_markup=markup)

    elif call.data == "confirm_booking":
        bot.answer_callback_query(call.id)
        msg = bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –∏–º—è:")
        bot.register_next_step_handler(msg, get_name)

    elif call.data == "cancel_booking":
        bot.answer_callback_query(call.id)
        bot.send_message(chat_id, "–•–æ—Ä–æ—à–æ üòä –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ /start")

    elif call.data.startswith("loc_"):
        bot.answer_callback_query(call.id)
        locs = {
            "airport": "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
            "station": "–ñ/–¥ –≤–æ–∫–∑–∞–ª",
            "address": "–° –∞–¥—Ä–µ—Å–∞ –≤–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ",
            "didube": "–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –î–∏–¥—É–±–µ",
            "other": "–î—Ä—É–≥–æ–µ"
        }
        loc_key = call.data.split("_", 1)[1]
        user_data[chat_id]["location"] = locs.get(loc_key, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

        data = user_data[chat_id]
        message_text = f"""üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:

üë§ –ò–º—è: {data['name']}
üìÖ –î–∞—Ç–∞: {data['date']}
üìç –ú–∞—Ä—à—Ä—É—Ç: {data['route']}
üë• –í–∑—Ä/–î–µ—Ç/–ñ–∏–≤: {data['adults']}/{data['children']}/{data['animals']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}
üöó –õ–æ–∫–∞—Ü–∏—è: {data['location']}
"""
        bot.send_message(561665893, message_text)  # –ó–∞–º–µ–Ω–∏—Ç—å ID –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        bot.send_message(chat_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å –≤–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è.")
        
# ---------- –®–ê–ì–ò –ê–ù–ö–ï–¢–´ ---------- #
def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]["name"] = message.text
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏:")
    bot.register_next_step_handler(msg, get_date)
def get_date(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["date"] = message.text  # –∑–¥–µ—Å—å –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ try, –Ω–æ –æ—Å—Ç–∞–≤–∏–º –Ω–∞ –≤—Å—è–∫–∏–π
        msg = bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –≤–∑—Ä–æ—Å–ª—ã—Ö?")
        bot.register_next_step_handler(msg, get_adults)
    except Exception:
        msg = bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –µ—â—ë —Ä–∞–∑:")
        bot.register_next_step_handler(msg, get_date)

def get_adults_for_price(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["adults"] = int(message.text)
        msg = bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π?")
        bot.register_next_step_handler(msg, get_children_for_price)
    except ValueError:
        msg = bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2)")
        bot.register_next_step_handler(msg, get_adults_for_price)

def get_children_for_price(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["children"] = int(message.text)
        msg = bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö?")
        bot.register_next_step_handler(msg, get_animals_for_price)
    except ValueError:
        msg = bot.send_message(chat_id, "‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1)")
        bot.register_next_step_handler(msg, get_children_for_price)


def get_animals_for_price(message):
    chat_id = message.chat.id
    try:
        user_data[chat_id]["animals"] = int(message.text)

        # –î–∞–ª–µ–µ –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤—ã–±—Ä–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Üí –¢–±–∏–ª–∏—Å–∏", callback_data="calc_route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –¢–±–∏–ª–∏—Å–∏"),
            types.InlineKeyboardButton("–¢–±–∏–ª–∏—Å–∏ ‚Üí –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑", callback_data="calc_route_–¢–±–∏–ª–∏—Å–∏ ‚Äî –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑"),
            types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Üí –ë–∞—Ç—É–º–∏", callback_data="calc_route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ë–∞—Ç—É–º–∏"),
            types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Üí –ö—É—Ç–∞–∏—Å–∏", callback_data="calc_route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ö—É—Ç–∞–∏—Å–∏"),
            types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Üí –°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞", callback_data="calc_route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞")
        )
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏:", reply_markup=markup)

    except ValueError:
        msg = bot.send_message(chat_id, "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0)")
        bot.register_next_step_handler(msg, get_animals_for_price)

# ---------- –ó–ê–ü–†–û–° –¢–ï–õ–ï–§–û–ù–ê ---------- #
def ask_phone(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button = types.KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    markup.add(button)
    msg = bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=markup)
    bot.register_next_step_handler(msg, handle_contact)

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    chat_id = message.chat.id
    user_data[chat_id]["phone"] = message.contact.phone_number

    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    hide_markup = types.ReplyKeyboardRemove()

    # –í—ã–±–æ—Ä –º–µ—Å—Ç–∞ –≤—ã–µ–∑–¥–∞
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–ê—ç—Ä–æ–ø–æ—Ä—Ç", callback_data="loc_airport"),
        types.InlineKeyboardButton("–ñ/–¥ –≤–æ–∫–∑–∞–ª", callback_data="loc_station"),
        types.InlineKeyboardButton("–° –∞–¥—Ä–µ—Å–∞ –≤–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ", callback_data="loc_address"),
        types.InlineKeyboardButton("–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –î–∏–¥—É–±–µ", callback_data="loc_didube"),
        types.InlineKeyboardButton("–î—Ä—É–≥–æ–µ", callback_data="loc_other")
    )
    bot.send_message(chat_id, "–û—Ç–∫—É–¥–∞ –±—É–¥–µ—Ç –≤—ã–µ–∑–¥?", reply_markup=markup)

# ---------- –ó–ê–ü–£–°–ö ---------- #
if __name__ == '__main__':
    bot.polling(non_stop=True, timeout=60)
