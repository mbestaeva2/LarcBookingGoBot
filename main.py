import telebot
from telebot import types

TOKEN = "7606923892:AAFTaq2UnGukug2VJJGZsN1NRrbgFeaICvQ"
ADMIN_ID = 561665893
bot = telebot.TeleBot(TOKEN)
user_data = {}


@bot.message_handler(commands=['start'])
def handle_start(message):
    show_main_menu(message.chat.id)

def show_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("üöê –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", callback_data="start_booking"),
        types.InlineKeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", callback_data="info"),
        types.InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url="https://t.me/TransverTbilisi")
    )
    bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    if call.data == "start_booking":
        user_data[chat_id] = {}
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")
        bot.register_next_step_handler(msg, get_name)

    elif call.data.startswith("route_"):
        user_data[chat_id]["route"] = call.data.split("_", 1)[1]
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        bot.register_next_step_handler(msg, get_phone)

    elif call.data.startswith("loc_"):
        locs = {
            "airport": "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
            "station": "–ñ/–¥ –≤–æ–∫–∑–∞–ª",
            "address": "–° –∞–¥—Ä–µ—Å–∞ –≤–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ",
            "didube": "–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –î–∏–¥—É–±–µ",
            "other": "–î—Ä—É–≥–æ–µ"
        }
        user_data[chat_id]["location"] = locs.get(call.data.split("_", 1)[1], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        show_summary(chat_id)

    elif call.data == "confirm_yes":
        data = user_data.get(chat_id, {})
        text = f"""üö® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!
–ò–º—è: {data.get('name')}
–î–∞—Ç–∞: {data.get('date')}
–ú–∞—Ä—à—Ä—É—Ç: {data.get('route')}
–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}
–ü–∞—Å—Å–∞–∂–∏—Ä—ã: {data.get('passengers')}
–õ–æ–∫–∞—Ü–∏—è: {data.get('location')}
"""
        bot.send_message(ADMIN_ID, text)
        bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úÖ")
        show_main_menu(chat_id)

    elif call.data == "confirm_no":
        bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå")
        show_main_menu(chat_id)

    elif call.data == "info":
        bot.send_message(chat_id, "–î–ª—è –ø–æ–µ–∑–¥–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –ø–∞—Å–ø–æ—Ä—Ç –∏ –ü–¶–†-—Ç–µ—Å—Ç.")
        show_main_menu(chat_id)

def get_name(message):
    chat_id = message.chat.id
    user_data[chat_id]["name"] = message.text
    msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 22.07):")
    bot.register_next_step_handler(msg, get_date)

def get_date(message):
    chat_id = message.chat.id
    user_data[chat_id]["date"] = message.text
    msg = bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤?")
    bot.register_next_step_handler(msg, get_passengers)

def get_passengers(message):
    chat_id = message.chat.id
    user_data[chat_id]["passengers"] = message.text
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –¢–±–∏–ª–∏—Å–∏", callback_data="route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –¢–±–∏–ª–∏—Å–∏"),
        types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞", callback_data="route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –°—Ç–µ–ø–∞–Ω—Ü–º–∏–Ω–¥–∞"),
        types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ö—É—Ç–∞–∏—Å–∏", callback_data="route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ö—É—Ç–∞–∏—Å–∏"),
        types.InlineKeyboardButton("–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ë–∞—Ç—É–º–∏", callback_data="route_–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ ‚Äî –ë–∞—Ç—É–º–∏"),
        types.InlineKeyboardButton("–¢–±–∏–ª–∏—Å–∏ ‚Äî –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑", callback_data="route_–¢–±–∏–ª–∏—Å–∏ ‚Äî –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑"),
    )
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:", reply_markup=markup)

def get_phone(message):
    chat_id = message.chat.id
    user_data[chat_id]["phone"] = message.text
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("–ê—ç—Ä–æ–ø–æ—Ä—Ç", callback_data="loc_airport"),
        types.InlineKeyboardButton("–ñ/–¥ –≤–æ–∫–∑–∞–ª", callback_data="loc_station"),
        types.InlineKeyboardButton("–° –∞–¥—Ä–µ—Å–∞ –≤–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ", callback_data="loc_address"),
        types.InlineKeyboardButton("–°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –î–∏–¥—É–±–µ", callback_data="loc_didube"),
        types.InlineKeyboardButton("–î—Ä—É–≥–æ–µ", callback_data="loc_other"),
    )
    bot.send_message(chat_id, "–û—Ç–∫—É–¥–∞ –±—É–¥–µ—Ç –≤—ã–µ–∑–¥?", reply_markup=markup)

def show_summary(chat_id):
    data = user_data[chat_id]
    summary = f"""üîé –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:

–ò–º—è: {data.get('name')}
–î–∞—Ç–∞: {data.get('date')}
–ú–∞—Ä—à—Ä—É—Ç: {data.get('route')}
–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}
–ü–∞—Å—Å–∞–∂–∏—Ä—ã: {data.get('passengers')}
–õ–æ–∫–∞—Ü–∏—è: {data.get('location')}

–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É?"""
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_yes"),
        types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm_no"),
    )
    bot.send_message(chat_id, summary, reply_markup=markup)

if __name__ == '__main__':
    bot.polling(none_stop=True)
